<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--  开启注解扫描  -->
    <context:component-scan base-package="com.shop.web"></context:component-scan>
    <!--一定要将自定义转换器类挂载在annotation-driven标签下面-->
    <mvc:annotation-driven conversion-service="ConversionService"></mvc:annotation-driven>
    <!--放行 被SpringMVC拦截的资源
    location 填写要被放行资源的物理路径
    mapping 填写访问的映射路径
     mapping="/js/**" 映射路径中所有子路径(子孙级)
    -->
    <mvc:resources mapping="/js/**" location="/js/"></mvc:resources>
    <mvc:resources mapping="/images/**" location="/images/"></mvc:resources>
    <!--<mvc:annotation-driven></mvc:annotation-driven> 1.替代最新版的处理器映射器和处理器适配器-->
    <!--视图解析器-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>
    <!--配置自定义转换器-->
    <bean name="ConversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="com.shop.converter.DateConverter"></bean>
            </set>
        </property>
    </bean>

    <!--配置SpringMVC上传组件(类) id必须是multipartResolver，因为SpringMVC源码中写死了-->
    <bean  id="multipartResolver"  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--maxUploadSize 单位：是以字节作为单位 5M-->
        <property name="maxUploadSize" value="5242880"></property>
    </bean>

    <!--配置全局异常类-->
    <bean class="com.shop.exception.GlobalException"></bean>

    <!--
    配置拦截器
     mvc:interceptors 配置一组拦截器(多个拦截器，顺序执行)
     mvc:interceptors标签下的子元素<bean>定义的是全局拦截器，它会拦截所有的请求
     而<mvc:interceptor>元素中定义的是指定路径的拦截器，对指定路径下的请求生效。
    <mvc:mapping> path ：填写拦截路径，如:"/**" 表示拦截所有路径，"/hello" 表示拦截所有以 "/hello" 结尾的路径。
     <mvc:exclude-mapping> path ：填写请求路径中包含不需要拦截的路径
     -->
    <mvc:interceptors>
        <!--<bean class="com.shop.Interceptor.Interceptor1"></bean>-->
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/list"></mvc:exclude-mapping>
            <bean class="com.shop.Interceptor.Interceptor1"></bean>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.shop.Interceptor.Interceptor2"></bean>
        </mvc:interceptor>
    </mvc:interceptors>


</beans>

